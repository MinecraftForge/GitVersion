import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java-library'
    id 'idea'
    id 'eclipse'
    id 'maven-publish'
    alias libs.plugins.licenser
    alias libs.plugins.gradleutils
    id 'net.minecraftforge.gitversion'
    id 'net.minecraftforge.changelog'
    alias libs.plugins.shadow
}

gradleutils.displayName = 'Git Version'
final projectVendor = 'Forge Development LLC'
description = 'Used by MinecraftForge projects to calculate project versions based on Git history.'
base.archivesName = 'gitversion'
group = 'net.minecraftforge'
version = gitversion.tagOffset

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    withSourcesJar()
}

final cli = sourceSets.create('cli')

configurations {
    dependencyScope('cliShadowImplementation')
    dependencyScope('cliShadowRuntimeOnly')

    resolvable('cliShadowClasspath') {
        extendsFrom cliShadowImplementation, cliShadowRuntimeOnly
    }

    named(cli.runtimeClasspathConfigurationName) {
        extendsFrom runtimeClasspath
    }

    named(cli.implementationConfigurationName) {
        extendsFrom cliShadowImplementation
    }

    named(cli.runtimeOnlyConfigurationName) {
        extendsFrom cliShadowRuntimeOnly
    }
}

dependencies {
    // Static Analysis
    compileOnly libs.nulls

    // Git
    implementation libs.jgit

    // Config
    implementation libs.toml

    // JSON Output
    implementation libs.gson

    // CLI
    cliImplementation sourceSets.main.output
    cliShadowImplementation libs.jopt
    cliShadowRuntimeOnly libs.slf4j
}

license {
    header = file 'LICENSE-header.txt'
    newLine = false
    exclude '**/*.properties'
}

tasks.named('jar', Jar) {
    manifest {
        attributes([
            'Specification-Title'   : gradleutils.displayName,
            'Specification-Vendor'  : projectVendor,
            'Specification-Version' : gitversion.info.tag,
            'Implementation-Title'  : gradleutils.displayName,
            'Implementation-Vendor' : projectVendor,
            'Implementation-Version': project.version
        ], 'net/minecraftforge/gitver/api/')
    }
}

tasks.named('shadowJar', ShadowJar) {
    manifest {
        attributes([
            'Main-Class': 'net.minecraftforge.gitver.cli.Main'
        ])
    }

    archiveClassifier = 'fatjar'
    from cli.output
    configurations = provider { [ project.configurations.getByName('runtimeClasspath'), project.configurations.getByName('cliShadowClasspath') ] }

    minimize()
}

changelog {
    fromBase()
}

publishing {
    repositories {
        maven gradleutils.publishingForgeMaven
    }

    publications.register('mavenJava', MavenPublication) {
        from components.java

        changelog.publish(it)
        gradleutils.promote(it)

        pom { pom ->
            name = gradleutils.displayName
            description = project.description

            gradleutils.pom.addRemoteDetails(pom)

            licenses {
                license gradleutils.pom.licenses.LGPLv2_1
            }

            developers {
                developer gradleutils.pom.developers.Jonathing
            }
        }
    }
}
