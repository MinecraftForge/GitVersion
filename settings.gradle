// NOTE: Dog-fooding our own Gradle plugin
// Even if it's done outside of pluginManagement, all included builds are considered for plugin substitutions
pluginManagement {
    includeBuild('gradle-plugin') {
        name = 'gitversion-gradle'
    }

    // Manually declare external repos, since the non-shadowJars of the plugins have dependencies from them
    repositories {
        //mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url = 'https://maven.minecraftforge.net' }
    }
}

plugins {
    id 'org.gradle.toolchains.foojay-resolver-convention' version '1.0.0'
}

rootProject.name = 'gitversion'

dependencyResolutionManagement {
    repositories {
        mavenCentral()
    }

    //@formatter:off
    versionCatalogs.register('libs') {
        // Plugins
        plugin 'javadoc-links', 'io.freefair.javadoc-links'      version '8.14'
        plugin 'licenser',      'net.minecraftforge.licenser'    version '1.2.0'
        plugin 'gradleutils',   'net.minecraftforge.gradleutils' version '3.0.0-beta.30'
        plugin 'shadow',        'com.gradleup.shadow'            version '9.0.2'

        // Git
        library 'jgit', 'org.eclipse.jgit', 'org.eclipse.jgit' version '7.2.0.202503040940-r'

        // Config
        library 'toml', 'org.tomlj', 'tomlj' version '1.1.1'

        // JSON Output
        library 'gson', 'com.google.code.gson', 'gson' version '2.13.1'

        // CLI
        library 'jopt',  'net.sf.jopt-simple', 'jopt-simple'  version '6.0-alpha-3'
        library 'slf4j', 'org.slf4j',          'slf4j-simple' version '1.7.36'

        // Static Analysis
        library 'nulls', 'org.jetbrains', 'annotations' version '26.0.2'
    }
    //@formatter:on
}
